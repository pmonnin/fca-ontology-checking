import argparse

from core.io.ContextManager import ContextManager

__author__ = "Pierre Monnin"


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument("trilattice", help="File containing the trilattice generated by DataPeeler")
    parser.add_argument("projection_context", help="File containing the 2D context equivalent to the projection")
    parser.add_argument("-d", "--dimension", help="Dimension to project on", choices=['objects', 'attributes',
                        'conditions'], default="conditions")
    args = parser.parse_args()

    print("Trilattice projector")

    context = {}
    if args.dimension == 'objects':
        dimension = 0
    elif args.dimension == 'attributes':
        dimension = 1
    else:  # conditions
        dimension = 2

    with open(args.trilattice, 'r') as trilattice:
        for i, current_line in enumerate(trilattice):
            if current_line[len(current_line) - 1] == '\n':
                current_line = current_line[:len(current_line) - 1]

            triconcept = current_line.split(' ')
            for d, value in enumerate(triconcept):
                triconcept[d] = value.split(',')

            if len(triconcept[dimension]) == 1 and triconcept[dimension][0] == "Ã¸":
                context[i] = []
            else:
                context[i] = list(triconcept[dimension])

    ContextManager.save_2d_context_for_sofia(context, args.projection_context)


if __name__ == '__main__':
    main()
